class Solution(object):
    def myAtoi(self, s):
        """
        :type s: str
        :rtype: int
        """
        
        allowable = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '+', '-', ' '}
        sign = 1
        ans = 0 
        i = 0
        thres = 2 ** 31 - 1

        while i < len(s):
            if s[i] not in allowable:
                break
            
            if s[i] == ' ':
                i += 1
                continue

            else:
                allowable = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'}
                if s[i] in {"-", "+"}:
                    if s[i] == '-': 
                        sign = -1
                    i += 1

                while (i < len(s)) and (s[i] in {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'}):
                    ans = 10 * ans + int(s[i]) 
                    i += 1

                break

        if (sign == 1):
            ans = min(ans, thres)
        else:
            ans = min(ans, thres + 1)
        
        return ans * sign
